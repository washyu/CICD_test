pipeline {
    agent {
        docker {
            image 'your-registry-url/ci-cd-image:1.0.0'
            args '-v /var/run/docker.sock:/var/run/docker.sock -v ${WORKSPACE}:/workspace -w /workspace'
        }
    }
    
    environment {
        REGISTRY = "your-registry-url"
        TAG = "${BUILD_NUMBER}"
        DOCKER_CREDENTIALS = credentials('docker-registry-credentials')
    }
    
    stages {
        stage('Build') {
            steps {
                // Using the pre-installed script from our custom image
                sh """
                docker-build-push.sh ${REGISTRY} demo-webapp-backend ${TAG} backend/Dockerfile .
                docker-build-push.sh ${REGISTRY} demo-webapp-frontend ${TAG} frontend/Dockerfile .
                """
            }
        }
        
        stage('Deploy') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    // Replace variables in Kubernetes manifests
                    sh """
                    sed -i 's|\${REGISTRY}|${REGISTRY}|g' k8s/webapp.yaml
                    sed -i 's|\${TAG}|${TAG}|g' k8s/webapp.yaml
                    
                    # Using the pre-installed script from our custom image
                    export KUBECONFIG=${KUBECONFIG}
                    k8s-deploy.sh default ./k8s
                    """
                }
            }
        }
    }
}
