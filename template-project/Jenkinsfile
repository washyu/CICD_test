pipeline {
    agent {
        docker {
            image 'your-registry-url/ci-cd-image:latest'
            args '-v /var/run/docker.sock:/var/run/docker.sock -v ${WORKSPACE}:/workspace -w /workspace'
        }
    }
    
    environment {
        // TODO: Update these variables for your project
        REGISTRY = "your-registry-url"
        PROJECT_NAME = "${JOB_NAME.split('/')[0]}"
        TAG = "${BUILD_NUMBER}"
        DOCKER_CREDENTIALS = credentials('docker-registry-credentials')
        KUBECONFIG_CRED = credentials('kubeconfig')
    }
    
    stages {
        stage('Build') {
            steps {
                sh """
                # Login to Docker registry
                echo ${DOCKER_CREDENTIALS_PSW} | docker login ${REGISTRY} -u ${DOCKER_CREDENTIALS_USR} --password-stdin
                
                # Build and push backend
                docker build -t ${REGISTRY}/${PROJECT_NAME}-backend:${TAG} -f backend/Dockerfile .
                docker push ${REGISTRY}/${PROJECT_NAME}-backend:${TAG}
                
                # Build and push frontend
                docker build -t ${REGISTRY}/${PROJECT_NAME}-frontend:${TAG} -f frontend/Dockerfile .
                docker push ${REGISTRY}/${PROJECT_NAME}-frontend:${TAG}
                """
            }
        }
        
        stage('Deploy') {
            steps {
                sh """
                # Replace variables in Kubernetes manifests
                sed -i 's|{{REGISTRY}}|${REGISTRY}|g' k8s/deployment.yaml
                sed -i 's|{{PROJECT_NAME}}|${PROJECT_NAME}|g' k8s/deployment.yaml
                sed -i 's|{{TAG}}|${TAG}|g' k8s/deployment.yaml
                
                # Deploy to Kubernetes
                export KUBECONFIG=${KUBECONFIG_CRED}
                kubectl apply -f k8s/
                kubectl rollout status deployment/${PROJECT_NAME} -n default
                """
            }
        }
    }
    
    post {
        always {
            sh 'docker logout ${REGISTRY} || true'
        }
        success {
            echo "Deployment successful! Application is available at: https://${PROJECT_NAME}.your-domain.com"
        }
    }
}
